replicaCount: 1
fullnameOverride: whoami
pvcSuffix: "whoami"

image:
  repository: docker.io/traefik/whoami
  tag: v1.11
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  # port: 8989 # sokitchensinkr
  port: 80 # prowlarr

# Add the following for configurable UID and GID
PUID: 1000
PGID: 1000

# env: []
env:
  TZ: "America/New_York"

# envFrom allows you to set environment variables from ConfigMaps or Secrets
# envFrom: []
# envFrom:
#   - configMapRef:
#       name: transmission-openvpn-config
#   - secretRef:
#       name: transmission-openvpn-secret

# securityContext allows you to set security options for the container
# securityContext: {}
# securityContext:
#   capabilities:
#     add:
#       - NET_ADMIN
#       - NET_RAW

ingress:
  enabled: false
  className: ""
  annotations: {}
  # Note: Homepage annotations have been moved to the 'homepage' section below
  # No need to configure them here anymore
  hosts:
    - host: cakitchensinky.l0l0.lol
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
    # - secretName: tls-tpi-wildcard
    #   hosts:
    #     - whoami.tpi.l0l0.lol

# Homepage integration configuration
homepage:
  enabled: false
  name: ""              # Display name in Homepage
  description: ""       # Service description
  group: ""            # Group/category in Homepage
  icon: ""             # Icon URL or mdi icon name
  # The pod-selector is automatically set to match the Helm release instance

# External DNS configuration
# Automatically manages DNS records for your ingress hostnames
externalDns:
  enabled: false
  # Hostnames for external-dns to manage (if empty, uses ingress.hosts)
  # hostnames: []
  # Optional: Set specific TTL for DNS records
  # ttl: "300"

persistence:
  # Legacy single PVC configuration (kept for backward compatibility)
  # NOTE: For new deployments, prefer using the 'pvcs' array below for better flexibility
  config:
    enabled: false          # Set to true to create a single PVC named '<release-name>-config'
    storageClass: ""        # Leave empty to use default storage class
    accessMode: ReadWriteOnce
    size: 1Gi
    mountPath: /config

  # Multiple PVC support - define as many PVCs as needed
  # Each PVC will be created with name '<release-name>-<name>'
  pvcs: []
  # Example configurations:
  # pvcs:
  #   # Basic PVC with default storage class
  #   - name: config
  #     size: 1Gi
  #     mountPath: /config
  #
  #   # PVC with specific storage class and access mode
  #   - name: data
  #     storageClass: "local-path"
  #     accessMode: ReadWriteOnce  # Options: ReadWriteOnce, ReadWriteMany, ReadOnlyMany
  #     size: 10Gi
  #     mountPath: /data
  #
  #   # Additional PVC for logs or cache
  #   - name: logs
  #     storageClass: "fast-ssd"
  #     accessMode: ReadWriteOnce
  #     size: 5Gi
  #     mountPath: /var/log

  # NFS mount support - mount NFS shares directly (no PVC required)
  # Multiple NFS mounts can be defined and used alongside PVCs
  nfs:
      enabled: false
      mounts: []
      # Example NFS configurations:
      # mounts:
      #   # Media library from NAS
      #   - name: media
      #     server: nas1-10g.lark.lol
      #     path: "/volume1/media"
      #     mountPath: "/media"
      #
      #   # Backup directory
      #   - name: backups
      #     server: nas1-10g.lark.lol
      #     path: "/volume1/backups"
      #     mountPath: "/backups"
      #
      #   # Shared configuration
      #   - name: shared-config
      #     server: 192.168.1.100
      #     path: "/export/config"
      #     mountPath: "/shared"

# ConfigMap and Secret volume mounts
# Mount ConfigMaps or Secrets as files in the container
volumeMounts: []
# Example configurations:
# volumeMounts:
#   # Mount entire ConfigMap as files
#   - name: app-config
#     type: configMap
#     configMapName: my-app-config
#     mountPath: /etc/config
#
#   # Mount entire Secret as files
#   - name: app-secrets
#     type: secret
#     secretName: my-app-secrets
#     mountPath: /etc/secrets
#
#   # Mount specific keys from ConfigMap
#   - name: single-config-file
#     type: configMap
#     configMapName: my-config
#     mountPath: /etc/app/config.yaml
#     subPath: config.yaml
#
#   # Mount specific keys from Secret with custom file permissions
#   - name: ssh-key
#     type: secret
#     secretName: ssh-credentials
#     mountPath: /root/.ssh/id_rsa
#     subPath: id_rsa
#     defaultMode: 0600

resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
