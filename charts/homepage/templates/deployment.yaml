apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "homepage.fullname" . }}
  labels:
    {{- include "homepage.labels" . | nindent 4 }}
  {{- with .Values.controller.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas | default 1 }}
  {{- with .Values.controller.strategy }}
  strategy:
    type: {{ . }}
    {{- if eq . "RollingUpdate" }}
    {{- with $.Values.controller.rollingUpdate }}
    rollingUpdate:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "homepage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        values-checksum: {{ print .Values | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "homepage.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "homepage.serviceAccountName" . }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ include "homepage.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
        ports:
        - name: http
          containerPort: {{ .Values.service.main.ports.http.port }}
          protocol: TCP
        {{- with .Values.env }}
        env:
        {{- range . }}
        - name: {{ .name }}
          {{- if .value }}
          value: {{ .value | quote }}
          {{- else if .valueFrom }}
          valueFrom:
            {{- toYaml .valueFrom | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- end }}
        {{- with .Values.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: homepage-config
          mountPath: /app/config/bookmarks.yaml
          subPath: bookmarks.yaml
        - name: homepage-config
          mountPath: /app/config/docker.yaml
          subPath: docker.yaml
        - name: homepage-config
          mountPath: /app/config/kubernetes.yaml
          subPath: kubernetes.yaml
        - name: homepage-config
          mountPath: /app/config/services.yaml
          subPath: services.yaml
        - name: homepage-config
          mountPath: /app/config/settings.yaml
          subPath: settings.yaml
        - name: homepage-config
          mountPath: /app/config/widgets.yaml
          subPath: widgets.yaml
        {{- if .Values.persistence.logs.enabled }}
        - name: logs
          mountPath: {{ .Values.persistence.logs.mountPath }}
        {{- end }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
      - name: homepage-config
        configMap:
          name: {{ default (include "homepage.fullname" .) .Values.config.useExistingConfigMap }}
      {{- if .Values.persistence.logs.enabled }}
      - name: logs
        {{- if eq .Values.persistence.logs.type "emptyDir" }}
        emptyDir: {}
        {{- else if eq .Values.persistence.logs.type "persistentVolumeClaim" }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.logs.existingClaim | default (printf "%s-logs" (include "homepage.fullname" .)) }}
        {{- end }}
      {{- end }}
